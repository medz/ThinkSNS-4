// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// User model
model User {
  id        String   @id @database.Char(64) /// User ID
  username  String?  @unique @database.VarChar(199) /// username
  phone     String?  @unique @database.VarChar(199) /// User bound phone number
  password  String?  @database.VarChar(255) /// Encrypted password
  createdAt DateTime @default(now()) /// User account created date

  authorizationTokens AuthorizationToken[] /// The user authorization tokens
  profile             UserProfile? /// the user profile
  moments             Moment[] /// The user moments

  @@index([createdAt])
}

/// User profile
model UserProfile {
  userId    String   @id @database.Char(64) /// The profile owner ID
  user      User     @relation(fields: [userId], references: [id]) /// The profile owner
  name      String?  @database.VarChar(100) /// user display name
  avatar    String?  @database.VarChar(255) /// user avatar
  bio       String?  @database.Text /// user bio
  location  String?  @database.VarChar(255) /// user location
  updatedAt DateTime @updatedAt /// The profile updated datetime
}

/// Authorization Token
model AuthorizationToken {
  userId           String   @database.Char(64) /// User ID
  user             User     @relation(fields: [userId], references: [id]) /// The token bound user
  token            String   @id @database.Char(128) /// Token
  expiredAt        DateTime /// Token expired date.
  refreshExpiredAt DateTime /// Use the token refresh expired data.

  @@index([userId])
  @@index([expiredAt])
  @@index([refreshExpiredAt])
}

/// Setting
model Setting {
  namespace String   @database.VarChar(199) /// Setting namespace
  name      String   @database.VarChar(199) /// setting name key
  value     Json /// setting value
  updatedAt DateTime @default(now()) @updatedAt

  @@id([namespace, name])
  @@index([namespace])
  @@index([name])
}

/// SMS Security code
model SecuritySmsCode {
  id        String    @id @database.Char(64) /// Security code id
  phone     String    @database.VarChar(199) /// Sent phone number
  code      String    @database.VarChar(50) /// Security code
  createdAt DateTime  @default(now()) /// The code created at.
  expiredAt DateTime /// The code expired at
  usedAt    DateTime? /// The code used at

  @@index([phone])
  @@index([code])
  @@index([usedAt])
}

/// Moment
model Moment {
  id        String    @id @database.Char(64) /// Moment id
  title     String?   @database.VarChar(199) /// Moment title
  content   String    @database.Text /// Moment content
  media     Json? /// Moment media
  createdAt DateTime  @default(now()) /// Moment created at
  deletedAt DateTime? /// Moment deleted
  ownerId   String    @database.Char(64) /// The moment owner id
  owner     User      @relation(fields: [ownerId], references: [id]) /// The moment owner

  @@index([createdAt])
  @@index([deletedAt])
}
